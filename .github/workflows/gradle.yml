# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Create Spring Properties
      run: |
        touch .env
        echo VARIABLE=${{ secrets.DEV_SPRING_PROPERTIES }} >> .env
    - name: Build with Gradle
      uses: gradle/gradle-build-action@937999e9cc2425eddc7fd62d1053baf041147db7
      with:
        arguments: build
    - name: Docker build
      run: |
        docker login -u ${{ secrets.USERNAME }} -p ${{ secrets.PASSWORD }}
        docker build -t spring-cicd .
        docker tag spring-cicd s2moon98/spring-cicd:${GITHUB_SHA::7}
        docker push s2moon98/spring-cicd:${GITHUB_SHA::7}
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: 146.56.130.233
        username: ubuntu
        key: ${{ secrets.PRIVATE_KEY }}
        envs: GITHUB_SHA
        script: |
          docker pull s2moon98/spring-cicd:${GITHUB_SHA::7}
          docker tag s2moon98/spring-cicd:${GITHUB_SHA::7} spring-cicd
          docker stop server
          docker run -d --rm --name server -p 8080:8080 spring-cicd